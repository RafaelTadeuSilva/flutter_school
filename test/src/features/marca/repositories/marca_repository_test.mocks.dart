// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_school/test/src/features/marca/repositories/marca_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_school/src/shared/api_client/api_client.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiClient extends _i1.Mock implements _i2.ApiClient {
  @override
  _i3.Future<Map<String, dynamic>> getOne(
    String? tabela,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOne,
          [
            tabela,
            id,
          ],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<List<Map<String, dynamic>>> getData(
    String? tabela,
    String? params,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getData,
          [
            tabela,
            params,
          ],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<List<Map<String, dynamic>>> postData(
    String? tabela,
    Map<String, String>? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postData,
          [
            tabela,
            body,
          ],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<Map<String, dynamic>> postOne(
    String? tabela,
    Map<String, String>? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postOne,
          [
            tabela,
            body,
          ],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> putOne(
    String? tabela,
    String? id,
    Map<String, String>? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #putOne,
          [
            tabela,
            id,
            body,
          ],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<bool> deleteOne(
    String? tabela,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteOne,
          [
            tabela,
            id,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
